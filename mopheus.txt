#)압축 풀때 파일이름이 길어서 몇개 파일이 압축이 안풀린다. -> 파일경로이름을 최소로해서 푼다.
(C드라이브에서 풀거나 그래도안되면 압축파일의 이름을 1로 바꾼후 다시푼다)

#)모피어스 sdk 연결 -> M-SDK Manager 에서 다 설치

==========================================================================
#)com_board_master Table
bbsMasterSeq = BOARD_MST~ = board_seq
board_Kind(게시판종류) = DTL00000092 (이미지) 95(동영상)
addfile_yn (첨부파일여부)
addfile_cnt (첨부파일개수)
comment_yn (댓글여부)
insert_authority (등록권한있는자) -> 60,50,40,30,20,10,4 ~ 이렇게 데이터가 들어가있음
upt_date (수정일)
public_yn (글공개여부)
board_desc (게시판 설명)

#)com_board_comment
comment_seq = CMT_000000030 ..

SELECT BOARD_SEQ
                 , BOARD_NM
                 , BOARD_KIND
                 , ADDFILE_YN
                 , ADDFILE_CNT
                 , COMMENT_YN
                 , ANSWER_YN
                 , PRINT_YN
                 , INSERT_AUTHORITY
                 , UPDATE_AUTHORITY
                 , DELETE_AUTHORITY
                 , REPLY_AUTHORITY
                 , FILE_AUTHORITY
                 , BOARD_DESC
                 , PUBLIC_YN
              FROM COM_BOARD_MASTER
             WHERE 1=1
               AND BOARD_SEQ = 'BOARD_MST_0000000003';
//결과
BOARD_SEQ               BOARD_NM    BOARD_KIND  ADDFILE_NM                                               BOARD_DESE        PUBLIC_YN
BOARD_MST_0000000003	자주하는 질문	DTL0000096	N		       N	       N	Y	-1	-1	-1			고객마당 - 자주하는 질문	Y

=================================================================================
#)출신학교 목록 조회
SELECT SCH_CD
	, SCH_NM
	FROM KOSWEC_JOB.S_SCH_CD
	ORDER BY SCH_CD

//sql결과
출신학교: [{schCd=111, schNm=한국해양대학교}, {schCd=112, schNm=목포해양대학교}, .....

=================================================================================
#)회원정보는 koswec_job.s_seaman_info 에 있다. (PID(주민), tel은 집전화, handyphone은 휴대폰)
#)koswec.member_info에는 mi_serial이 기본키이다., mi_mggrade는 -1:관리자, 10: 선사, 20: 선원

#)trim(특정한 문자 제거, 제거할 문자를 입력하지 않으면 공백이 제거된다)
설정값으로는 Leading(왼쪽에서 제거), Trailing(오른쪽에서 제거), both(양쪽에서 제거)
설정을 특별히 해주지 않으면 both로 자동설정이 된다.

********** trim은 한문자만 제거가능!!!!!

SELECT TRIM('     oracleStudy     ') AS result FROM DUAL; -- 'oracleStudy'
SELECT TRIM('o' FROM 'oracleStudy') AS result FROM DUAL; -- racleStudy 
SELECT TRIM('디' FROM '디게 좋은 오라클 스터디') AS result FROM DUAL; -- 게 좋은 오라클 스터
SELECT TRIM(BOTH '디' FROM '디게 좋은 오라클 스터디') AS result FROM DUAL; -- 게 좋은 오라클 스터 
SELECT TRIM(LEADING '디' FROM '디게 좋은 오라클 스터디') AS result FROM DUAL; --게 좋은 오라클 스터디
SELECT TRIM(TRAILING '디' FROM '디게 좋은 오라클 스터디') result FROM DUAL; --디게 좋은 오라클 스터

//뒤에 공백이 있어서 '디'를 지우지 못했다 -> 공백지우고 지워야한다.
SELECT TRIM(TRAILING '디' FROM '디게 좋은 오라클 스터디 ') result FROM DUAL;--디게 좋은 오라클 스터디

//두개의 문자는 에러가 난다.
SELECT TRIM(TRAILING '디게' FROM '디게 좋은 오라클 스터디 ') AS result FROM DUAL; -- ERROR


********** LTRIM, RTRIM은 trim과 다르게 두글자 이상이 가능하다.
SELECT LTRIM('     oracleStudy     ') AS result FROM DUAL; -- 'oracleStudy     '
SELECT LTRIM('디게 좋은 오라클 스터디 ' , '디') AS result FROM DUAL; -- '게 좋은 오라클 스터디'
SELECT LTRIM('디게 좋은 오라클 스터디 ' , '디게 ') AS result FROM DUAL; -- '좋은 오라클 스터디'
SELECT LTRIM('디게 좋은 오라클 스터디 ' , '게다') AS result FROM DUAL; -- '디게 좋은 오라클 스터디'
SELECT LTRIM('디게 좋은 오라클 스터디 ' , '디그다') AS result FROM DUAL; -- '게 좋은 오라클 스터디'
SELECT LTRIM('디게 좋은 오라클 스터디 ' , '디게다') AS result FROM DUAL; -- ' 좋은 오라클 스터디'


SELECT RTRIM('     oracleStudy     ') AS result FROM DUAL; -- '     oracleStudy'
SELECT RTRIM('디게 좋은 오라클 스터디 ' , '디') AS result FROM DUAL; -- '디게 좋은 오라클 스터'
SELECT RTRIM('디게 좋은 오라클 스터디 ' , '디터스 ') AS result FROM DUAL; -- '디게 좋은 오라클 '
SELECT RTRIM('디게 좋은 오라클 스터디 ' , '스터디') AS result FROM DUAL; -- '디게 좋은 오라클 스터디 '
SELECT RTRIM('디게 좋은 오라클 스터디' , '디그다') AS result FROM DUAL; -- '디게 좋은 오라클 스터'


//LTRIM('COCONUT', 'CO') -> nut 만 남는다.
====================================================================================
#)휴대전화 입력 폼
<td>
	<input name="hp1" type="text" id="hp1" class="txt72 txt" value="${marinerInfoVO.hp1}" size="4" maxlength="4" onblur="checkTel(this,this.value);" onkeypress="fc_onlyNum();">
	 - 
	<input name="hp2" type="text" id="hp2" class="txt72 txt" value="${marinerInfoVO.hp2}" size="4" maxlength="4" onblur="checkNum(this,this.value);" onkeypress="fc_onlyNum();"> - 
	<input name="hp3" type="text" id="hp3" class="txt72 txt" value="${marinerInfoVO.hp3}" size="4" maxlength="4" onblur="checkNum(this,this.value);" onkeypress="fc_onlyNum();">
</td>

----------------------
function checkNum(theObj, theValue){ //theObj에는 hp2 폼이, theValue에는 5370 이 온다
			console.log(theObj)
			console.log(theValue)
			var num, i;
			num = "0123456789";
			for(i = 0 ; i<theValue.length ; i++){
				if(num.indexOf(theValue.charAt(i)) == -1){
					alert("숫자만 입력해 주세요.");
					theObj.value = "";
					theObj.focus();
					return false;
				}
			}
			return true;
		}
=======================================================================
#)년도, 월별, 일별 select box 만들기

var now = new Date();
var nyear = now.getFullYear();
var nmon = (now.getMonth()+1) > 9 ? ''+(now.getMonth()+1) : '0'+(now.getMonth()+1); //한자리는 0을 붙힌다.
var ndate = (now.getDate()+1) > 9 ? ''+(now.getDate()+1) : '0'+(now.getDate()+1);
var birthday = document.membForm.miBirthday.value;
			
			//년도 selectbox만들기
			for(var sy = 1930 ; sy <= nyear ; sy++) {
				if(sy == birthday.substring(0,4)){
					$('#mi_year').append('<option value="' + sy + '" selected = "selected">' + sy + '</option>');
				}else{
					$('#mi_year').append('<option value="' + sy + '">' + sy + '</option>');	
				}
			}
			//월별 selectbox 만들기
			for(var i=1; i <= 12; i++) {
				var sm = i > 9 ? i : "0"+i;
				
				if(sm == birthday.substring(4,6)){
					$('#mi_month').append('<option value="' + sm + '" selected = "selected">' + sm + '</option>');
				}else{
					$('#mi_month').append('<option value="' + sm + '">' + sm + '</option>');	
				}
			}
			//일별 selectbox 만들기
			for(var i=1; i <= 31; i++) {
				var sm = i > 9 ? i : "0"+i;
				
				if(sm == birthday.substring(6,8)){
					$('#mi_date').append('<option value="' + sm + '" selected = "selected">' + sm + '</option>');
				}else{
					$('#mi_date').append('<option value="' + sm + '">' + sm + '</option>');	
				}
			}
======================================================================
function addrDetailChk1(obj){
		if(obj.value.length > 0){
			var expText = /^[^?#&+\"\\]+$/;
			if(expText.test(obj.value) != true){
				alert('특수문자 ? # & + \\ " 를 입력 할 수 없습니다.');
				obj.value="";
			}
		}
	}
	
<a class="close" href="javascript:popClose();" title="창닫기" tabindex="3">닫기</a>

	function popClose(){
		window.close();
	}
==========================================================================
#)Serialize란
form요소를 아래처럼 직렬화로 바꾼다.

iframe=&confmKey=U01TX0FVVEgyMDIxMDExOTE0MTAwNTExMDcxNDI%3D&encodingType=&cssUrl=&resultType=4&currentPage=1
&countPerPage=5&rtRoadAddr=&rtAddrPart1=&rtAddrPart2=&rtEngAddr=&rtJibunAddr=&rtZipNo=&rtAdmCd=&rtRnMgtSn=
&rtBdMgtSn=&rtDetBdNmList=&rtBdNm=&rtBdKdcd=&rtSiNm=&rtSggNm=&rtEmdNm=&rtLiNm=&rtRn=&rtUdrtYn=&rtBuldMnnm=
&rtBuldSlno=&rtMtYn=&rtLnbrMnnm=&rtLnbrSlno=&rtEmdNo=&searchType=&dsgubuntext=&dscity1text=&dscounty1text=
&dsemd1text=&dsri1text=&dsrd_nm1text=&dssan1text=&keyword=%EC%82%BC%ED%98%B83%EA%B8%B8+12&rtAddrDetail=

-------------------------
Ajax를 이용해 서버단으로 데이터를 전송할 때 {키:값} 의 형태인 Json 자료형으로 데이터를 보내게 되는데

new ajax.Request(URL,
{
	name: '~~~',
	age: '20',
}

대충 이렇게 되는데 이게 필드가 많아지면 힘들다. 그래서 폼에 있는 데이터를 한꺼번에 보내고 싶을 때 serialize() 함수를 쓴다.

var jData = $("frm").serialize();
//아래처럼 보내면 된다.
new ajax.Request(url,
{
	param : jData,
}
==========================================================================
//주소찾기하면 이렇게 xml로 넘어온다.
<?xml version="1.0" encoding="UTF-8"?>
	<results>
		<common>
			<totalCount>1</totalCount>
			<currentPage>1</currentPage>
			<countPerPage>5</countPerPage>
			<errorCode>0</errorCode>
			<errorMessage>정상</errorMessage>
		</common>
		<juso>
			<roadAddr>경상남도 양산시 삼호3길 12(삼호동, 모아주택)</roadAddr>
			<roadAddrPart1>경상남도 양산시 삼호3길 12</roadAddrPart1>
			<roadAddrPart2>(삼호동, 모아주택)</roadAddrPart2>
			<jibunAddr>경상남도 양산시 삼호동 995-2 모아주택</jibunAddr>
			<engAddr>12 Samho 3-gil, Yangsan-si, Gyeongsangnam-do</engAddr>
			<zipNo>50530</zipNo>
			<admCd>4833011400</admCd>
			<rnMgtSn>483304814412</rnMgtSn>
			<bdMgtSn>4833011400109950002034742</bdMgtSn>
			<detBdNmList></detBdNmList>
			<bdNm>모아주택</bdNm>
			<bdKdcd>1</bdKdcd>
			<siNm>경상남도</siNm>
			<sggNm>양산시</sggNm>
			<emdNm>삼호동</emdNm>
			<liNm></liNm>
			<rn>삼호3길</rn>
			<udrtYn>0</udrtYn>
			<buldMnnm>12</buldMnnm>
			<buldSlno>0</buldSlno>
			<mtYn>0</mtYn>
			<lnbrMnnm>995</lnbrMnnm>
			<lnbrSlno>2</lnbrSlno>
			<emdNo>01</emdNo>
		</juso>
	</results>

#)ajax를 요청하면 위에처럼 결과를 받는다. 아래에서는 xmlStr로 받았다.
function searchUrlJuso(){
		$("#resultData").hide();
		var frm = document.AKCFrm;
		frm.keyword.value = checkSearchedWord(frm.keyword); // 특수문자 및 sql예약어 제거, 20160912
		$("#keyword").val(validateJuso($("#keyword").val())); //공백 및 특수문자 제거
		$("#keyword").val(regExpCheckJuso($("#keyword").val()));
		
		$.ajax({
			 //url :"http://www.juso.go.kr/addrlink/addrLinkUrl.do"  //인터넷망
		     url :"https://www.juso.go.kr/addrlink/addrLinkApiJsonp.do"  //내부행망
		     //url :"http://10.182.60.20/addrlink/addrLinkApiJsonp.do"  //행정망
			,type:"post"
			,data:$("#AKCFrm").serialize()
			,dataType:"jsonp"
			,crossDomain:true
			,success:function(xmlStr){
				console.log($("#AKCFrm").serialize())
				if(navigator.appName.indexOf("Microsoft") > -1){
					var xmlData = new ActiveXObject("Microsoft.XMLDOM");
					xmlData.loadXML(xmlStr.returnXml)
				}else{
					var xmlData = xmlStr.returnXml;
				}
				$(".popSearchNoResult").html("");
				var errCode = $(xmlData).find("errorCode").text();
				var errDesc = $(xmlData).find("errorMessage").text();
				
				var totalCount = $(xmlData).find("totalCount").text();
				var currentPage = $(xmlData).find("currentPage").text();
				
				if( parseInt(totalCount) > 1000 && currentPage == "1" )
					alert("검색 결과가 너무 많습니다(1,000건 이상)\n검색어 예를 참조하여 검색하시기 바랍니다.");
				
				if(errCode != "0"){
					alert(errDesc);
				}else{
					if(xmlStr != null){
						makeList(xmlData);
						console.log(xmlData)
					}
				}
			}
		    ,error: function(xhr,status, error){
		    	//alert("에러발생");
		    	alert("검색에 실패하였습니다 \n 다시 검색하시기 바랍니다.");
		    }
		});
			
	}
	
---------------------------
#)주소 페이징
function pageMake(xmlStr){
		var total = $(xmlStr).find("totalCount").text(); // 총건수
		var pageNum =  $(xmlStr).find("currentPage").text();// 현재페이지
		var paggingStr = "";
		if(total < 1){
		}else{
			var PAGEBLOCK= 10;
			var pageSize= parseInt( $(xmlStr).find("countPerPage").text() ); //한 페이지당 5개씩 띄운다.
			var totalPages = Math.floor((total-1)/pageSize) + 1;
			var firstPage = Math.floor((pageNum-1)/PAGEBLOCK) * PAGEBLOCK + 1;		
			if( firstPage <= 0 ) firstPage = 1;		
			var lastPage = firstPage-1 + PAGEBLOCK;
			if( lastPage > totalPages ) lastPage = totalPages;		
			var nextPage = lastPage+1 ;
			var prePage = firstPage-5 ;
			
			if(totalPages > 1){
				if( firstPage > PAGEBLOCK ){
					paggingStr +=  "<a class='skip prev' href='javascript: $(\"#currentPage\").val("+prePage+");  searchUrlJuso();'>이전으로</a>  " ;
				}
				for( i=firstPage; i<=lastPage; i++ ){
					if( pageNum == i )
						paggingStr += "<strong>" + i + "</strong>  ";
					else
						paggingStr += "<a href='javascript:$(\"#currentPage\").val("+i+");  searchUrlJuso();'>" + i + "</a>  ";
				}		
				if( lastPage < totalPages ){
					paggingStr +=  "<a class='skip next' href='javascript: $(\"#currentPage\").val("+nextPage+");  searchUrlJuso();'>다음으로</a>";
				}
			}
			$("#pageApi").html(paggingStr);
		}	
	}	
--------------------------------
#)자바스크립트 injection 방지코드




----------------------------------
#)정규표현식 -> 특정 패턴에 매칭되는 문자열을 찾기위한 표현 방식
const regex = /\d{3}-\d{4}-\d{4}/;
// (\d는 숫자를 의미하고, {} 안의 숫자는 갯수를 의미한다.)


//특정 문자열이 해당 패턴에 맞는지 체크할 수 있습니다.
regex.test('010-1111-2222') // true;
regex.test('01-11-22') // false;

//전화번호만 발라내기
const text = "안녕하세요 제 번호는 010-1111-2222 입니다. call me~!";
text.match(/\d{3}-\d{4}-\d{4}/); // 010-1111-2222


먼저 아래 문장을 정규표현식으로 주물러 보겠습니다.
"대나무 빨대 a급 제품은 10개 남아있습니다. 010-1111-2222 로 Call Me~!"
 
/대/ :  '대'를 '하나'만 찾는다. 
=> 대나무 빨대 a급 제품은 10개 남아있습니다. 010-1111-2222 로 Call Me~!
  (1) 

/대/g: '대'를 '모두' 찾는다
=> 대나무 빨대 a급 제품은 10개 남아있습니다. 010-1111-2222 로 Call Me~!
* g(global) 플래그를 뒤에 붙인걸 기억하세요.
 
/대나무 빨대/: '대나무 빨대'를 찾는다.
=> 대나무 빨대 a급 제품은 10개 남아있습니다. 010-1111-2222 로 Call Me~!
 
/[대a0]/g: "대", "a", 0 중에 하나를 모두 찾는다. 
=> 대나무 빨대 a급 제품은 10개 남아있습니다. 010-1111-2222 로 Call Me~!
  (1)   (2)(3)      (4)          (5) (6)           
* 대괄호[]는 OR의 기능을 합니다.
 
/[0-9]/g : '숫자0~9'를 모두 찾는다.
=> 대나무 빨대 a급 제품은 10개 남아있습니다. 010-1111-2222 로 Call Me~!
 
/[a-zA-Z]/g : '영어알파벳 대문자/소문자'를 모두 찾는다.
=> 대나무 빨대 a급 제품은 10개 남아있습니다. 010-1111-2222 로 Call Me~!
 
/[^0-9]/g : '숫자0~9'가 아닌 것을 모두 찾는다.
=> 대나무 빨대 a급 제품은 10개 남아있습니다. 010-1111-2222 로 Call Me~!
* 대괄호[] 안에서 앞에 ^를 쓰면, 부정(Not)의 기능을 합니다.

//웹사이트 주소 정규표현식
const text = `대나무 빨대 구입 문의 : http://dogumaster.com http://google.com 010-1111-2222 02-333-7777 curryyou@aaa.com`;
text.match(/https?:\/\/[\w\-\.]+/g);
// ["http://dogumaster.com", "http://google.com"]
1) http => 로 시작하고,
2) s? => 다음에 s는 없거나 있고,
3) : => 다음에 : 가 오고,
4) \/\/ => 다음에 특수기호 // 가 오고
5) [\w\-\.]+ => \w(영문자, 언더스코어), 하이픈, 쩜 으로 이루어진 문자열이 한개 이상(+) 있다.
6) g => 매칭되는걸 모두 다 찾는다.(플래그)



//전화번호 정규표현식
const text = `대나무 빨대 구입 문의 : http://dogumaster.com http://google.com 010-1111-2222 02-333-7777 curryyou@aaa.com`;
text.match(/\d{2,3}-\d{3,4}-\d{4}/g);
// [ '010-1111-2222', '02-333-7777' ]
1) \d{2,3} => 숫자 2~3개로 시작하고,
2) \- => 다음에 하이픈(-)이 오고
3) \d{3, 4} => 다음에 숫자가 3~4개 오고,
4)  \- => 다음에 하이픈(-)이 오고,
5) \d{4} => 다음에 숫자가 4개 온다.
6) g => 매칭되는걸 모두 다 찾는다(플래그)
	
=========================================================================
#)Array.join([구분자])
배열 내에 모든 값들을 순서대로 연결시켜주고, 배열의 길이가 0이면 빈 문자열을 반환하게 된다. 그리고 구분값이 존재하지 않으면 쉼표로 표기되어 연결되고 빈 문자열일 경우 구분없이 연결된다.

var test = ['a', 'b', 'c'];
var result1 = test.join();  
// result : a,b,c

var result2 = test.join('');  
// result : abc

var test = ['2020', '01', '01'];
var result1 = test.join('-');
// result : 2020-01-01

var result2 = test.join('/'); 
// result : 2020/01/01
======================================================================
#)선원센터 홈페이지에는 (-) 를 background 로 넣었다.

예) - 이거를 구현(-)

<ul class="list_1st">
	<li>특별지방자치단체~~</li>
</ul>

//결과 
- 특별지방자치단체~~

.list_1st li {
	padding-left: 11px; // '-' 기준해서 몇 px을 띄울거냐 
	background: url(/images/img/list_~.png) no-repeat left 9px;
}

============================================================================
<div class="txtwrap">
	<strong class="tit_inner">한국선원복지~</strong>   //margin-bottom: 15px;
	<p>정보공개제도~</p>
</div>

//결과
한국선원복지고용센터의 전반적인 자료들에 대한 이용방법을 안내합니다.

정보공개제도와 그에 관련된 방침을 확인하실 수 있습니다.

============================================================================
<p class="pab10"> // .pad10 {padding-bottom: 10px !important}
	<span class="point_color04 font_b"사본공개: </span> // .point_color04 { color: #3e61b2 } .font_b {font-weight: 700 }
	정보공개를 원본으로 하는 것이 원칙이나~
	<br>
	사본으로 공개가 가능합니다.
</p>

//결과
사본공개: 정보공개를 원본으로 하는 것이 원칙이나,~
사본으로 공개가 가능합니다.

==========================================================================
#)선원센터 선박조회 페이지
업종: 1. 외항상선 2. 내항상선 3. 연근해어선 4. 원양어선 5. 해외취업상선 6. 해외취업어선
선종: 11: 잡화 12: 컨테이너 13: 유조
상세선종: 110: 여객선 120: 화객선 ...

PaginationInfo는 페이징 처리를 위한 데이터들을 담고있는 클래스. PaginationTag 클래스에서 PaginationInfo에 담긴
정보를 기반으로 페이징을 렌더링한다.

이름	                설명	                        사용자입력여부	      계산공식
currentPageNo	    현재 페이지 번호	                yes
recordCountPerPage	한 페이지당 게시되는 게시물 건 수	    yes	
pageSize	        페이지 리스트에 게시되는 페이지 건수	yes	
totalRecordCount	전체 게시물 건 수	            yes	
totalPageCount	    페이지 개수                   	no	              totalPageCount = ((totalRecordCount-1)/recordCountPerPage) + 1
firstPageNoOnPageList	페이지 리스트의 첫 페이지 번호	no	              firstPageNoOnPageList = ((currentPageNo-1)/pageSize)*pageSize + 1
lastPageNoOnPageList	페이지 리스트의 마지막 페이지 번호	no	          lastPageNoOnPageList = firstPageNoOnPageList+pageSize-1
                                                                  if(lastPageNoOnPageList>totalRecordCount){lastPageNoOnPageList=totalPageCount}
firstRecordIndex	페이징 SQL의 조건절에 사용되는 시작 rownum	no	      firstRecordIndex = (currentPageNo - 1) * recordCountPerPage
lastRecordIndex	페이징 SQL의 조건절에 사용되는 마지막 rownum	    no	      lastRecordIndex = currentPageNo * recordCountPerPage

=============================================================================
#)선박조회 시 순서대로 업종먼저선택(kndcd) -> 선종선택 -> 상세선종 -> 업체명(입력) -> 선박명(입력)
<!-- 업종목록 -->
	<select id="KWShipSearchDAO.selectKndcdList" resultClass="egovMap">
		<![CDATA[
   		 	SELECT KND_CD AS kndcd, CD_NM AS cdnm, KND_CD || ': ' || CD_NM AS kndcdname
			  FROM KOSWEC_JOB.COMM1_CD
			 WHERE grp_cd = '10'
    	]]>
	</select>
	
//결과 
KNDCD   CDNM     KNDCDNAME
1       외항상선    1: 외항상선
2       내항상선    2: 내항상선
3       연근해어선   3: 연근해어선
4       원양어선    4: 원양어선
5       해외취업상선 5: 해외취업상선
6       해외취업어선 6: 해외취업어선

---------------------
<!-- 선종목록 -->
	<select id="KWShipSearchDAO.selectShpkndList" parameterClass="shipSearchVO" resultClass="egovMap">
		<![CDATA[
			  SELECT A.VESSEL_CODE,
			         A.VESSEL_NAME,
			         A.VESSEL_KIND,
			         A.VESSEL_CODE || ': ' || A.VESSEL_NAME AS VESSELNAME
			    FROM KOSWEC_JOB.SMCM14 A
			   WHERE LENGTH (A.VESSEL_CODE) = 2 
		]]>
		<isNotEmpty property="kndcd">
		<isEqual prepend="AND" property="kndcd" compareValue="1"><![CDATA[ VESSEL_CODE < 30 ]]></isEqual>
		<isEqual prepend="AND" property="kndcd" compareValue="2"><![CDATA[ VESSEL_CODE < 30 ]]></isEqual>
		<isEqual prepend="AND" property="kndcd" compareValue="5"><![CDATA[ VESSEL_CODE < 30 ]]></isEqual>
		<isEqual prepend="AND" property="kndcd" compareValue="3"><![CDATA[ VESSEL_CODE > 30 ]]></isEqual>
		<isEqual prepend="AND" property="kndcd" compareValue="4"><![CDATA[ VESSEL_CODE > 30 ]]></isEqual>
		<isEqual prepend="AND" property="kndcd" compareValue="6"><![CDATA[ VESSEL_CODE > 30 ]]></isEqual>
		</isNotEmpty>
		<![CDATA[
			ORDER BY A.VESSEL_CODE
    	]]>
	</select>
	
//결과
VESSEL_CODE   VESSEL_NAME   VESSEL_KIND    VESSELNAME
22            기타            Z              22:기타
11            잡화            A              11:잡화
12            컨테이너         B              12: 컨테이너
13            유조            C              13: 유조
...

---------------------------
<!-- 상세선종목록 -->
	<select id="KWShipSearchDAO.selectDtlshpkndList" parameterClass="shipSearchVO" resultClass="egovMap">
		<![CDATA[
			SELECT 	A.VESSEL_CODE,
					A.VESSEL_NAME,
					A.VESSEL_KIND,
					A.VESSEL_CODE || ': ' || A.VESSEL_NAME AS VESSELNAME
			FROM 	KOSWEC_JOB.SMCM14 A
			WHERE 	1 = 1 
		]]>
		<isNotEmpty property="vesselKind" prepend="AND">
		<![CDATA[
					A.VESSEL_KIND = #vesselKind#
		]]>
		</isNotEmpty>
		<![CDATA[
			AND 	LENGTH (A.VESSEL_CODE) <> 2
			ORDER BY A.VESSEL_CODE
    	]]>
	</select>
---------------------------
#)여기서 onchange란 selectbox에서 값을 선택했을 때 해당함수로 이동하는 것이다. 

<form name="nextForm" action ="/koswec/information/shipsearch/selectShipSearchList.do" method="post">
	<strong class="txt">업종</strong>
		<select id="kndcdList" name="kndcdList" onchange="selectKndcdList(this.value);" title="검색분류 선택" class="width15s mal-10" style="width:15%;">
			<option value="">선택</option>
				<c:forEach var="kndcdList" items="${shipSearchVO.kndcdList}">
				<option  value="${kndcdList.kndcd}" <c:if test="${shipSearchVO.kndcd == kndcdList.kndcd}">selected</c:if>> ${kndcdList.kndcdname}</option>
			</c:forEach>
		</select>
	<input type="image" src="/images/img/btn_search.gif" onclick="selectShipSearchList(); return false;" alt="검색" class="add-width15s-wd2 mar10">
</form>
--------------------------
<script>
			function linkPage(pageNo){ //페이지번호 클릭 시
				document.nextForm.pageIndex.value = pageNo;
				document.nextForm.action = "/koswec/information/shipsearch/selectShipSearchList.do";
				document.nextForm.submit();
			}
			function selectShipSearchList() {
				document.nextForm.pageIndex.value = 1;
				document.nextForm.action = "/koswec/information/shipsearch/selectShipSearchList.do";
				document.nextForm.submit();
			}
			//업종목록
			function selectKndcdList(kndcdVal) {
				nextForm.kndcd.value = kndcdVal;
				selectShipSearchList();
			}
			//선종목록
			function selectShpkndList(vesselVal) {
				var strArray = vesselVal.split(',');
				if(strArray != null) {
					nextForm.vesselcode.value = strArray[0];
					nextForm.vesselKind.value = strArray[1];
				} else {
					nextForm.vesselcode.value = "";
					nextForm.vesselKind.value = "";
				}
				nextForm.vesselcodeDtl.value = "";				
				selectShipSearchList();
			}
			//상세선종목록
			function selectDtlshpkndList(vesselcodeVal) {
				nextForm.vesselcodeDtl.value = vesselcodeVal;				
				selectShipSearchList();
			}
</script>
========================================================
#)전자정부프레임워크 properties 속성 불러오기
전자정부프레임워크에서는 xml을 이용하여 설정정보를 저장하고 이를 사용할 수 있도록 되어있다.
resources 밑에 context-properties.xml 에 작성하면 된다.

//context-properties.xml
<bean name="propertiesService" class="egovframework.rte.fdl.property.impl.EgovPropertyServiceImpl" destroy-method="destroy">
      <property name="properties">
         <map>
            <entry key="pageUnit" value="10"/>
            <entry key="pageSize" value="10"/>
         </map>
      </property>
	</bean>

//컨트롤러에서는 @Resource써주고 쓰면 된다.
@Controller
public class KWShipSearchController {	
	private static final Logger logger = Logger.getLogger(KWShipSearchController.class);

	/** Validator */
	@Autowired
	private DefaultBeanValidator beanValidator;
	
	/** EgovPropertyService */
    @Resource(name = "propertiesService")
    protected EgovPropertyService propertiesService;
    
    /** KWShipSearchService */
	@Resource(name = "KWShipSearchService")
    private KWShipSearchService KWShipSearchService;

	/** EgovMessageSource */
    @Resource(name="egovMessageSource")
    EgovMessageSource EgovMessageSource;
    
    /*
     * 선박조회 메인페이지
     */
    @RequestMapping("/koswec/information/shipsearch/selectShipSearchList.do")
    public String selectShipSearchList(@ModelAttribute("shipSearchVO") KWShipSearchVO shipSearchVO, ModelMap model) throws Exception {
    	
    	shipSearchVO.setPageUnit(propertiesService.getInt("pageUnit"));
		shipSearchVO.setPageSize(propertiesService.getInt("pageSize"));		
==================================================================
#)업체코드 = com_cd, 호출부호 = call_sign (호출부호는 업체코드와 1대1이다 즉, 정해져있다)
  업체명 = com_knm, 선박명 = ship_knm
 
#)마이페이지 -> 받은 메시지함
//id마다 idx는 고정
MESSAGE_SENDER_INFO에서
		seq_idx (메시지번호 pk)
		regi_name (메시지보낸사람 이름)
		regi_idx (메시지보낸사람의 고정값)
		contents (html코드로 이력서보기 등등)

MESSAGE_RECEIVER_INFO에서
		sseq_idx
		regi_idx (받은 회사 값)
		regi_name (회사이름)

MEMBER_INFO
		mi_serial (유저고유번호)
		mi_mggrade(10:선사, 20:선원)
		mi_id(아이디)
		


----------------------------
#)받은메시지 총 개수
<select id="KWMypageMessageDAO.selectReceivedMessageTotalCount" parameterClass="mypageMessageVO" resultClass="int">
		<![CDATA[
			SELECT COUNT(*)
              FROM KOSWECH.MESSAGE_SENDER_INFO SENDER
                  ,(SELECT *
                      FROM KOSWECH.MESSAGE_RECEIVER_INFO
                     WHERE RECEIVER_ISUSE = '1') RECEIVER
             WHERE SENDER.SEQ_IDX = RECEIVER.SSEQ_IDX(+)
               AND RECEIVER.REGI_IDX = #regiIdx#
               AND RECEIVER.RECEIVER_ISSAVED = 0
		]]>
		<isEqual prepend="AND" property="searchCondition" compareValue="SENDER.TITLE">
			<![CDATA[   SENDER.TITLE LIKE '%'||#searchKeyword#||'%'  ]]>
		</isEqual>
		<isEqual prepend="AND" property="searchCondition" compareValue="SENDER.CONTENTS">
			<![CDATA[   SENDER.CONTENTS LIKE '%'||#searchKeyword#||'%'  ]]>
		</isEqual>
		<isEqual prepend="AND" property="searchCondition" compareValue="RECEIVER.REGI_NAME">
			<![CDATA[   RECEIVER.REGI_NAME LIKE '%'||#searchKeyword#||'%'  ]]>
		</isEqual>
	</select>
=============================================================
#)회원상세정보
/* Formatted on 2022/06/28 오전 10:39:59 (QP5 v5.256.13226.35538) */
SELECT A.MI_SERIAL AS "memberIdx",
       A.MI_ID AS "memberId",
       A.MI_NAME AS "memberName",
       A.MI_HTEL AS "homePhone",
       (SELECT DAMO.DECRYPT_VAR ('DA_API', PID, '')
          FROM KOSWEC_JOB.S_SEAMAN_INFO
         WHERE MI_SERIAL = '1358')
          AS "miSocialid",
       NVL (B.MG_GRADE, 0) AS "groupType"
  FROM (SELECT *
          FROM KOSWECH.MEMBER_INFO_TB
         WHERE ISUSE = '1') A,
       (SELECT *
          FROM KOSWECH.MEMBER_GROUP_INFO
         WHERE ISUSE = '1') B
 WHERE A.MI_SERIAL = B.MI_SERIAL(+) AND A.MI_SERIAL = '1358'; //left outer join

//결과
memberIdx memberId memberName homePhone     misocialid groupType
1358      DS20002  신한해운(주)   041 034 8772                10

=====================================================================
//찾기버튼 누를 때 회원 및 업체찾기
#)MEMBER_GROUP_INFO TABLE  (3개의 컬럼만있음, 그래서 left outer join하면 b는 다나오고 a는 null도 나옴)
MI_SERIAL  MG_GRADE  ISUSE
555        10         1
556        10         1
...        ...        ...


#)MEMBER_INFO_TB
MI_SERIAL  MI_MGGRADE  MI_ID  MI_NAME  MI_EMAIL  ....


SELECT *
  FROM (SELECT T1.*, ROWNUM RN
          FROM (  SELECT A.MI_SERIAL AS MEMBER_IDX,
                         A.MI_ID,
                         A.MI_NAME AS MEMBER_NAME,
                         A.MI_HTEL AS HOME_PHONE,
                         B.MG_GRADE,
                         A.MI_EMAIL
                    FROM (SELECT *
                            FROM KOSWECH.MEMBER_INFO_TB
                           WHERE ISUSE = '1') A,
                         (SELECT *
                            FROM KOSWECH.MEMBER_GROUP_INFO
                           WHERE ISUSE = '1') B
                   WHERE     A.MI_SERIAL = B.MI_SERIAL(+) //left outer join
                         AND A.MI_STATE = '1'
                         AND B.MG_GRADE = '10'
                         AND LOWER (MI_NAME) LIKE '%' || '에스케이' || '%'
                ORDER BY A.MI_NAME) T1)
 WHERE RN BETWEEN 0 + 1 AND 0 + 10;


//결과
MEMBER_IDX   MI_ID   MEMBER_NAME      HOME_PHONE     MG_GRADE   MI_EMAIL   RN
21724        sh10147  에스케이엠코리아(주)  051 469 7654   10                     1
196          sh10001  에스케이해운(주)     051 605 0955   10        jo@asd.com   2

=========================================================================
#)팝업창(메시지보내기 -> 찾기)  찾기 누르면 팝업창이 뜬다.
// 검색 check
			function searchCheck(){
				var fm = document.nextForm;
	
				if(fm.searchValue.value == null || fm.searchValue.value == ''){
					alert('검색내용을 입력하세요.');
					fm.searchValue.focus();
					return;
				}
				fm.action = '/koswec/mypage/message/selectMemberSearchList.do';
				fm.submit();
			}
			
//값이 있는지의 여부 체크			
function fc_isFill(theInput) {
				if(theInput) {
					if(theInput.value.split(' ').join('') == '') {
						return false;
					} else {
						return true;
					}
				}
				return false;
			}
			
			
//클릭하면 selCheck함수로 보낸다.
<td><a href="#a" onclick="selCheck('${recList.memberIdx}', '${recList.memberName}')">${recList.memberName}</a></td>  
			
// 1명 선택(input check)
			function selCheck(theIdx, theName) {
				var varReceiverIdxObj = opener.document.getElementById('receiverIdx'); //부모페이지에서 receiverIdx를 찾는다.(부모페이지란 클릭했을 때 팝업창을 띄우게 한 페이지)
				var varReceiverNameObj = opener.document.getElementById('receiverName');
				
				//찾아서 부모의 input에 넣어라
				var varTempIdx = varReceiverIdxObj.value;
				var varTempName = varReceiverNameObj.value;
				
				if(fc_isFill(varReceiverIdxObj))
				{
					varTempIdx += ',';
					varTempName += ',';
				}
				varTempIdx += theIdx;
				varTempName += theName;
						
				varReceiverIdxObj.value = varTempIdx;
				varReceiverNameObj.value = varTempName;
				self.close(); //팝업창을 알아서 닫는다
			}

// 복수개 선택 (확인버튼누르면 발동)
			function selAllCheck() {
				
				var varReceiverIdxObj = opener.document.getElementById('receiverIdx'); 
				var varReceiverNameObj = opener.document.getElementById('receiverName');
				
				var varMemberIdxObj = document.getElementsByName('memberIdx');
				var varMemberNameObj = document.getElementsByName('memberName');
				
				var varTempIdx = varReceiverIdxObj.value;
				var varTempName = varReceiverNameObj.value;
				
				//alert(varTempName);
				
				var idx = 0;
				for(var i = 0 ; i <  varMemberIdxObj.length ; i ++) {
					
					if(varMemberIdxObj[i].checked) {
						
						if(fc_isFill(varReceiverIdxObj) || idx > 0) {
							varTempIdx += ',';
							varTempName += ',';
						}
						varTempIdx += varMemberIdxObj[i].value;
						varTempName += varMemberNameObj[i].value;
						
						idx ++;
					}
				}
				//alert(varTempName);
				varReceiverIdxObj.value = varTempIdx;
				varReceiverNameObj.value = varTempName;
				self.close();
			}
==================================================================================
//marineInfoVO를 받아서 넣음.(miserial)
<!-- 회원 탈퇴 Update -->
	<update id="KWMarinerInfoDAO.updateMarinerSecede" parameterClass="marinerInfoVO">
		<![CDATA[
			UPDATE KOSWECH.MEMBER_INFO_TB
			   SET ISUSE = '0', MI_STATE = '0'
			 WHERE MI_SERIAL = #miSerial#
		]]>
	</update>
===================================================================================
//비밀번호 변경
//입력한 비밀번호와 현재비밀번호가 일치하면 1
<!-- 비밀번호 체크 --> //현재비밀번호 입력 후 확인 sql
	<select id="KWMarinerInfoDAO.selectMarinerPassCheck" parameterClass="marinerInfoVO" resultClass="int">
		<![CDATA[
			 SELECT COUNT(*) 
           	   FROM KOSWECH.MEMBER_INFO_TB  
          WHERE ROWNUM = '1'
            AND MI_ID = #miId#
            AND MI_PASSWD = DAMO.HASH_STR_DATA(#miPasswd#)
            AND MI_SERIAL = #miSerial# 
    	]]>
	</select>

-----------------
//새비밀번호 입력 -> 수정 sql
<!-- 비밀번호 수정 -->
	<update id="KWMarinerInfoDAO.updateMarinerPassInfo" parameterClass="marinerInfoVO">
		<![CDATA[
			 UPDATE KOSWECH.MEMBER_INFO_TB
  				SET MI_PASSWD 		= DAMO.HASH_STR_DATA(#miPasswdNew#)
  				   ,PASSWD_CHG_DATE = SYSDATE
		      WHERE MI_SERIAL = #miSerial#
    	]]>
	</update>
===================================================================================
// c:if -> selected
<select id="searchCondition" name="searchCondition" title="검색분류 선택">
	<option value="total" <c:if test="${bbsVO.searchCondition == 'total'}">selected="selected"</c:if>>전체</option>
	<option value="title" <c:if test="${bbsVO.searchCondition == 'title'}">selected="selected"</c:if>>제목</option>
	<option value="con" <c:if test="${bbsVO.searchCondition == 'con'}">selected="selected"</c:if>>내용</option>
</select>		

================================================================================
#)table의 scope
table에 scope="col", scope="row" 를 작성하는 이유는 시각장애인들을 위해서다.
시각장애인들은 스크린리더기라는 프로그램을 통해 귀로만 테이블에 정보를 얻어야하기때문에
scope를 이용해 테이블의 데이터를 인식하고 읽는순서를 결정하ㅔ 된다. -> 웹 표준 및 웹 접근성에는 필수사항이다.

-------------------------------------------------
	   |				구분1						|
전체구분1|-----------------------------------------|
       | 구분1-1         구분1-2            구분1-3 |
-------------------------------------------------
구분A   | 내용1-1-A       내용1-2-A         내용1-3-A   
-------------------------------------------------
구분B   | 내용1-1-B       내용1-2-B         내용1-3-B  
-------------------------------------------------
구분C   | 내용1-1-C       내용1-2-C         내용1-3-C  
________________________________________________

//내용(데이터)이 들어가는 부분은 scope=""를 넣지 않는다. 

<table width="100%" summary="데이타테이블 설명" class="datatable">
	<caption>표제목</caption>
		<thead>
			<tr>
				<th rowspan="2" scope="col">전체 구분1 </th>
				<th colspan="3" scope="colgroup">구분 1 </th>
			</tr>
			<tr>
				<th scope="col">구분 1-1 </th>
				<th scope="col"> 구분 1-2 </th>
				<th scope="col">구분1-3</th> 
			</tr>
		</thead>
		<tbody>
			<tr>
				<th scope="row">구분 A</th>
				<td>내용 1-1-A</td>
				<td>내용 1-2-A</td>
				<td>내용 1-3-A</td>
			</tr>
			<tr>
				<th scope="row">구분 B</th>
				<td>내용 1-1-B</td>
				<td>내용 1-2-B</td>
				<td>내용 1-3-B</td>
			</tr>
			<tr>
				<th scope="row">구분 C</th>
				<td>내용 1-1-C</td>
				<td>내용 1-2-C</td>
				<td>내용 1-3-C</td>
			</tr>
		</tbody>
</table>
====================================================================
#)commons-lang-2.6.jar 라이브러리 추가 후
import org.apache.commons.lang.StringEscapeUtils;

public class HtmlEscapeTest {

	public static void main(String[] args) {

		String html = "<script>alert('Test');</script>";
		
		String escapeHtml = StringEscapeUtils.escapeHtml(html);
		System.out.println("Escape : " + escapeHtml);
		
		String unescapeHtml = StringEscapeUtils.unescapeHtml(escapeHtml);
		System.out.println("UnEscape : " + unescapeHtml);
	}

}

//실행결과
Escape : &lt;script&gt;alert('Test');&lt;/script&gt;
UnEscape : <script>alert('Test');</script>
====================================================================
#)오시는 길

koswec_home.com_contents_list 테이블

cnt_id : 컨텐츠형식(pk) -> cnt_00138
cnt_file_nm : 컨텐츠 파일명 -> loct_new
cnt_stre_path : 컨텐츠 저장경로 
cnt_korean_nm : 컨텐츠 명 -> 오시는길
cnt_dc : 컨텐츠 설명
cnt_url : 컨텐츠 주소   -> /cop/cnt/selectContentsPage.do?cntId=loct_new  로 컬럼에 들어가있다.
cnt_contents : 컨텐츠 내용 -> html 코드가 들어가있다

//caption은 화면상에는 출력이 안된다.
<table class="tbl_col align_center">
    <caption>
        <details>
            <summary>주소 및 교통편 안내</summary>
        </details>
    </caption>


//cntTemplate.jsp
<%@ page import="egovframework.com.cop.cnt.service.EgovContentsManageVO"%>
<%@ page import="org.apache.commons.lang.StringEscapeUtils" %>
EgovContentsManageVO vo = (EgovContentsManageVO) request.getAttribute("cntManageVO");
String unescapeJson = StringEscapeUtils.unescapeHtml(vo.getCntContents());    // html entity 를 unescape 한다, cntContents에는 html코드가 들어가있다.

<div id="center_txt">
	<%out.println(unescapteJson);%>  //페이지가 딱 띄워지면 실행
</div>

 <div id="map" style="width:500px;height:350px;"></div>
                <script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=e15051af8d9c6f144fa1c9eaac6f7bf7&libraries=services"></script>
                <script>
                    var mapContainer = document.getElementById('map'), // 지도를 표시할 div 
                        mapOption = {
                            center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표
                            level: 3 // 지도의 확대 레벨
                        };

                    // 지도를 표시할 div와  지도 옵션으로  지도를 생성합니다
                    var map = new kakao.maps.Map(mapContainer, mapOption);

                    var geocoder = new daum.maps.services.Geocoder();

                    geocoder.addressSearch('부산 중구 충장대로 9번길 66 (중앙동 4가) 한국선원센터 3층', function (result, status) {

                        if (status === daum.maps.services.Status.OK) {

                            var coords = new daum.maps.LatLng(result[0].y, result[0].x);

                            var marker = new daum.maps.Marker({
                                map: map,
                                position: coords
                            });

                            var infowindow = new daum.maps.InfoWindow({
                                content: '<div style="width:150px;text-align:center;padding:6px 0;">본부</div>'
                            });
                            infowindow.open(map, marker);
                            map.setCenter(coords);
                        }
                    });
                </script>
            </div>
=============================================================================
#)휴양/복지 -> 콘도페이지
//콘도누르고 들어오면 (carserial이 리조트 종류이다)
@RequestMapping("/koswec/benefit/condoapp/condoReserveView.do")
	public String condoReserveView(@ModelAttribute("condoVO") KWCondoappVO condoVO, ModelMap model) throws Exception {
		
//		EgovLoginVO user;
//    	if(EgovUserDetailsHelper.isAuthenticated()){
//    		 user = (EgovLoginVO)EgovUserDetailsHelper.getAuthenticatedUser();
//    	}else{
//    		model.addAttribute("message", EgovMessageSource.getMessage("fail.common.login"));
//    		return "forward:/uat/uia/egovLoginUsr.do";
//    	}
		System.out.println("전전: " + condoVO.getCaSerial());
		String caserial = EgovStringUtil.nvl(condoVO.getCaSerial());
		System.out.println("전caserial: " + caserial);
		if(condoVO.getCaserial() == 0 && caserial.equals("")){
			caserial = "1"; //처음에 들어오면 리조트 1번이 나온다
		}else if(condoVO.getCaserial() > 0 && caserial.equals("")){
			caserial = Integer.toString(condoVO.getCaserial());
		}
		System.out.println("caserial: " + caserial);
		model.addAttribute("caserial", caserial);
    	return "egovframework/koswec/benefit/condoReserveView_2018new";
	}		

=======================================================================
//콘드신청 기본정보입력
#)직책목록(select box)
<select id="KWCondoDAO.selectJigChekList" resultClass="egovMap">
		<![CDATA[
			  SELECT JIKMU_CODE
			        ,JIKMU_SHORTNAME
			    FROM KOSWEC_JOB.SMCM12
			   WHERE JIKMU_CODE <> '40'
			     AND JIKMU_CODE <> '41'
			     AND JIKMU_CODE <> '42'
			ORDER BY JIKMU_CODE ASC
    	]]>
	</select>

//결과
JIKMU_CODE   JIKMI_SHORTNAME
10           선장
11			 1등항해사
12           2등항해사
13           3등항해사
14           실습항해사
...

--------------------
#)업종목록
SELECT KND_CD ,CD_NM FROM KOSWEC_JOB.COMM1_CD WHERE GRP_CD = '10';

//결과
KND_CD    CD_NM
1         외항상선
2         내항상선
3         연근해어선
...

----------------------
//콘도신청 예약사항
#)콘도목록
SELECT CN_SERIAL ,CN_NAME FROM KOSWEC_WEL.CONDO_NAME_TB ORDER BY CN_SERIAL;

//결과
CN_SERIAL   CN_NAME
1           한화리조트
2           켄싱턴리조트
3           일성콘도
4           대명리조트
...

----------------------
//약관동의 (체크하면 Y)  -> 신청하면 send2() 라는 함수로 보내지게된다 (아래)
<input type="radio" id="agree1_Y" name="memberAccept" value="Y">
	<label for="agree1_Y">동의함</label>
<input type="radio" id="agree1_N" name="memberAccept" value="N">
	<label for="agree1_N">동의하지 않음</label>
	

	function send2(){
				
		var agree2_Y = $('input[name="memberAccept2"]:checked').val();
		var agree1_Y = $('input[name="memberAccept"]:checked').val();
		var agree3_Y = $('input[name="memberAccept3"]:checked').val();
		var agree4_Y = $('input[name="memberAccept4"]:checked').val();
		
		if(agree1_Y != "Y")
		{	
			alert('개인정보 수집·이용에 동의하셔야 콘도신청이 가능합니다.');
			$('#agree1_Y').focus();
			return;
		}	
		
		if(agree2_Y != "Y")
		{	
			alert('민감정보 처리 내역에 동의하셔야 콘도신청이 가능합니다.');
			$('#agree2_Y').focus();
			return;
		}	
		
		if(agree3_Y != "Y")
		{		
			alert('제공에 관한 사항에 동의하셔야 콘도신청이 가능합니다.');
			$('#agree3_Y').focus();
			return;
		}	
		
		if(agree4_Y != "Y")
		{	
			alert('알림정보 수신에 동의하셔야 콘도신청이 가능합니다.');
			$("#agree4_Y").focus();
			return;
		}	
		if(frm.wuEmbarkation_txt.value=="") {
					alert("승무경력은 필수 입력 값 입니다.\n데이터 누락 시 담당자에게 문의 바랍니다.");
					frm.wuEmbarkation_txt.focus();
					return false;
		}			
		if(frm.caApplyname.value=="") {
					alert("신청인 성명을 입력해주세요.");
					frm.caApplyname.focus();
					return false;
				}				
		if(frm.caBank.value== "") {
					alert("지원금을 지급받으실 은행명을 입력해주세요.");
					frm.caBank.focus();
					return false;
		}	
		if(frm.caAccname.value=="") {
			alert("예금주를 입력해주세요.");
			frm.caAccname.focus();
			return false;
		}
		if(frm.caAccount.value=="") {
			alert("계좌번호를 입력해주세요.");
			frm.caAccount.focus();
			return false;
		}			
				


=======================================================================
#)콘도신청 파일업로드 설정은 context-common.xml에 설정
  <bean id="spring.RegularCommonsMultipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="524288000" />
        <property name="maxInMemorySize" value="524288000" />
    </bean>

    <!-- custom multi file resolver -->
    <bean id="local.MultiCommonsMultipartResolver" class="egovframework.com.cmm.web.EgovMultipartResolver">
        <property name="maxUploadSize" value="524288000" />
        <property name="maxInMemorySize" value="524288000" />
    </bean>

    <!-- choose one from above and alias it to the name Spring expects -->
    <!-- alias name="local.MultiCommonsMultipartResolver" alias="multipartResolver" /-->
    <alias name="spring.RegularCommonsMultipartResolver" alias="multipartResolver" />
=========================================================================
/**
	 * 콘도 개인정보 수집 동의서 페이지 이동
	 * @param model
	 * @return
	 */
	@RequestMapping("/koswec/mypage/condo/condoAppAgree.do") 
	public String condoAppAgree(@ModelAttribute("condoVO") KWCondoVO condoVO, ModelMap model,HttpServletResponse response) throws Exception {

		// 0. Spring Security 사용자권한 처리
    	Boolean isAuthenticated = EgovUserDetailsHelper.isAuthenticated();
    	if(!isAuthenticated) {
    		model.addAttribute("message", egovMessageSource.getMessage("fail.common.login"));
    		return "forward:/uat/uia/egovLoginUsr.do";
    	}
		EgovLoginVO user = (EgovLoginVO)EgovUserDetailsHelper.getAuthenticatedUser();
		
		if("20".equals(user.getUserSe())){
			return "egovframework/koswec/mypage/condo/agree_2018new";
		}
		else{
    		model.addAttribute("message", "콘도신청은 선원회원만 해당됩니다.");
    		return "forward:/com/sym/main/selectMainView.do";
		}
	}
=====================================================================
 /**
     * 콘도명 및 지역명 선택시 평수 조회(Ajax)
     * @param request
     * @param httpServletResponse
     * @param session
     * @throws Exception
     */
    @RequestMapping(value="/koswec/mypage/condo/selectPyeongInfo.do")
    public void selectPyeongInfo(@RequestParam("condo") String condo,
    							 @RequestParam("loc") String loc,
    							 HttpServletRequest request, HttpServletResponse response, HttpSession session) throws Exception {
    	
    	try{
	    	List<KWCondoVO> pyeongList = KWCondoService.selectCondoPyeongInfoList(condo, loc); // seq, pyeong이 결과로 나온다.
	    	
	    	response.setContentType("text/xml;charset=UTF-8");
	    	response.setHeader("Cache-Control", "no-cache");
	    	PrintWriter out = response.getWriter();
	    	StringBuffer sb = new StringBuffer();
	    	
	    	sb.append("<response>");
	    	sb.append("<code>success</code>");
	    	
	    	for ( int inx = 0 ; inx < pyeongList.size() ; inx ++ ) {
	    		
	    		KWCondoVO condoPyeong = (KWCondoVO) pyeongList.get(inx);
	    		
	    		sb.append("<result>");
	    		sb.append("<seq><![CDATA[" 		+ condoPyeong.getSeq()		+ "]]></seq>");
	    		sb.append("<pyeong><![CDATA[" 	+ condoPyeong.getPyeong()	+ "]]></pyeong>");
	    		sb.append("</result>");
	    	}
	    	sb.append("</response>");
	    	out.println(sb.toString()); //condoappRegist_2018new.jsp로 이동
	    	
    	} catch (Exception e) {
    		logger.error("selectPyeongInfo() :::: ", e);
    	}
    }
	
-------------------

var pyeongList = new Array();
			function doChangeCondoLoc(val_target, condo, loc) {
				var target = document.getElementById(val_target);
				eval("condoValue=document.frm."+condo+".value");
				eval("locValue=document.frm."+loc+".value");
				$.ajax
				( { type:"post"
				  , dataType:"xml"
				  , url:"/koswec/mypage/condo/selectPyeongInfo.do?condo="+condoValue+"&loc="+locValue
				  , async:false
				  , success:function(xml){
						if ( $(xml).find("result").length > 0 ) {
							pyeongList = new Array();
							$(xml).find("result").each(function() {
								pyeongList.push( $(this).find("seq").text() + "@"
										  		+ $(this).find("pyeong").text()
										  		);
							});
							fnCreatePyeong(pyeongList, target);
						}
					}
				  , error: function(xhr, status, error) {
					  alert(error); 
					  }
				} 
				);
			}
============================================================================














